{"version":3,"sources":["serviceWorker.js","Frontend/Components/Landing/Landing.jsx","Frontend/Components/Landing/SignIn.jsx","Frontend/Components/Landing/SignUp.jsx","Frontend/Components/Landing/UploadSchedule.jsx","Frontend/Components/Dashboard/Course.jsx","Frontend/Components/Dashboard/Schedule.jsx","Frontend/Components/Dashboard/Info.jsx","Frontend/Components/Dashboard/Review.jsx","Frontend/Components/Dashboard/popularForums.jsx","Frontend/Components/Dashboard/Dashboard.jsx","Frontend/Components/Dashboard/GuestDashboard.jsx","Frontend/Components/Search/SearchResults.jsx","Frontend/Components/Dashboard/Forums.jsx","Frontend/Components/Dashboard/Question.jsx","Frontend/Components/Dashboard/DashboardLanding.jsx","Frontend/Components/Navbar.jsx","Frontend/Components/VirtualSal.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Landing","state","className","to","Component","SignIn","props","handleSubmit","event","username","document","getElementById","value","password","alert","preventDefault","stopPropagation","$","ajax","url","data","async","success","console","log","validSignIn","fname","name","lname","lastname","email","courses","localStorage","setItem","validUsername","Form","Group","controlId","Control","type","placeholder","required","style","left","onClick","this","SignUp","resetForm","firstname","confirmpassword","validEmail","Row","as","Col","Text","color","Course","semester","year","courseName","professor","sectionNumber","UploadSchedule","handleNewCourse","newClass","setState","courseList","concat","handleSubmission","map","t","backgroundColor","height","borderColor","Schedule","details","valid","dataType","bind","course","key","Info","getItem","Review","workload","clarity","comment","change","e","target","onSubmit","onChange","selected","disabled","hidden","class","popularForums","id","question","upvotes","downvotes","thread","Dashboard","handleInput","searchKey","onSearch","onInput","forum","GuestDashboard","exampleList","SearchResults","searchBarInput","resultsList","componentDidMount","linkTitle","result","handleSearch","searchLinks","toUpperCase","toString","searchPaths","path","handleNewComment","professorName","Forums","sthread","reply","voteApprove","st","voteYes","voteDisapprove","voteNo","handlesubmit","length","onchange","threads","rows","margin","Question","questionTitle","questionBody","Label","defaultValue","cols","Button","DashboardLanding","exact","Navbar","dependentHome","VirtualSal","basename","process","REACT_APP_ROUTER_BASE","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yWAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,qDCMSC,E,4MApBbC,MAAQ,G,uDAEN,OACE,yBAAKC,UAAU,oBACb,kBAAC,IAAD,CAAMC,GAAG,WACP,4BAAQD,UAAU,iBAAlB,YAEF,6BACA,kBAAC,IAAD,CAAMC,GAAG,WACP,4BAAQD,UAAU,iBAAlB,YAEF,6BACA,kBAAC,IAAD,CAAMC,GAAG,cACP,4BAAQD,UAAU,iBAAlB,e,GAdYE,a,iCCyGPC,E,kDArGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,aAAe,SAACC,GACd,IACMC,EAAWC,SAASC,eAAe,YAAYC,MAC/CC,EAAWH,SAASC,eAAe,YAAYC,MAErD,IAAMH,IAAYI,EAIhB,OAHAC,MAAM,mCACNN,EAAMO,sBACNP,EAAMQ,kBAIRC,IAAEC,KAAK,CACLC,IAAK,oDACLC,KAAM,CACJX,SAAUA,EACVI,SAAUA,GAEZQ,OAAO,EACPC,QAAS,SAAUF,GAGjB,GAFAG,QAAQC,IAAIJ,GACZG,QAAQC,IAAIJ,EAAKK,aACQ,SAArBL,EAAKK,YAAwB,CAE/B,IAAMC,EAAQN,EAAKO,KACbC,EAAQR,EAAKS,SACbC,EAAQV,EAAKU,MACbC,EAAUX,EAAKW,QACrBC,aAAaC,QAAQ,WAAYxB,GACjCuB,aAAaC,QAAQ,WAAYP,EAAQ,IAAME,GAC/CI,aAAaC,QAAQ,QAASH,GAC9BE,aAAaC,QAAQ,UAAWF,GAChCjB,MAAM,8BAEe,UAArBM,EAAKK,aACkB,SAAvBL,EAAKc,eAGLpB,MAAM,yCACNN,EAAMO,iBACNP,EAAMQ,kBAENN,SAASC,eAAe,YAAYC,MAAQ,KAG5CE,MAAM,sDACNN,EAAMO,iBACNP,EAAMQ,kBAENN,SAASC,eAAe,YAAYC,MAAQ,GAC5CF,SAASC,eAAe,YAAYC,MAAQ,QAxDlD,EAAKX,MAAQ,CACXQ,SAAU,GACVI,SAAU,IAJK,E,qDAiEjB,OACE,yBAAKX,UAAU,iBACb,wBAAIA,UAAU,aAAd,WACA,wBAAIA,UAAU,gBAAd,8BACA,6BACA,kBAACiC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,WACZC,UAAQ,EACRC,MAAO,CAAEC,KAAM,SAGnB,kBAACR,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRC,MAAO,CAAEC,KAAM,SAGnB,kBAAC,IAAD,CACExC,GAAG,aACHD,UAAU,gBACVqC,KAAK,SACLK,QAASC,KAAKtC,cAJhB,iB,GAxFWH,a,gBCoLN0C,E,kDApLb,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IAURyC,UAAY,WAEVrC,SAASC,eAAe,aAAaC,MAAQ,GAC7CF,SAASC,eAAe,YAAYC,MAAQ,GAC5CF,SAASC,eAAe,SAASC,MAAQ,GACzCF,SAASC,eAAe,YAAYC,MAAQ,GAC5CF,SAASC,eAAe,YAAYC,MAAQ,GAC5CF,SAASC,eAAe,mBAAmBC,MAAQ,IAlBlC,EAqBnBL,aAAe,SAACC,GACd,IACMwC,EAAYtC,SAASC,eAAe,aAAaC,MACjDiB,EAAWnB,SAASC,eAAe,YAAYC,MAC/CkB,EAAQpB,SAASC,eAAe,SAASC,MACzCH,EAAWC,SAASC,eAAe,YAAYC,MAC/CC,EAAWH,SAASC,eAAe,YAAYC,MAC/CqC,EAAkBvC,SAASC,eAAe,mBAAmBC,MAEnE,OAEIoC,GACAnB,GACAC,GACArB,GACAI,GACAoC,EASApC,IAAaoC,GACfnC,MAAM,8CACNN,EAAMO,iBACNP,EAAMQ,kBACNN,SAASC,eAAe,YAAYC,MAAQ,QAC5CF,SAASC,eAAe,mBAAmBC,MAAQ,UAIrDK,IAAEC,KAAK,CACLC,IAAK,oDACLE,OAAO,EACPD,KAAM,CACJX,SAAUA,EACVI,SAAUA,EACVmC,UAAWA,EACXlB,MAAOA,EACPD,SAAUA,GAEZP,QAAS,SAAUF,GACjBG,QAAQC,IAAIJ,GACe,UAAvBA,EAAKc,eAAiD,UAApBd,EAAK8B,aACd,UAAvB9B,EAAKc,eAAiD,UAApBd,EAAK8B,WACzCpC,MAAM,2DAC0B,UAAvBM,EAAKc,cACdpB,MAAM,4BACuB,UAApBM,EAAK8B,YACdpC,MAAM,yBAERN,EAAMO,iBACNP,EAAMQ,mBAERgB,aAAaC,QAAQ,WAAYxB,GACjCuB,aAAaC,QAAQ,WAAYe,EAAY,IAAMnB,GACnDG,aAAaC,QAAQ,QAASH,OAxChChB,MAAM,mCACNN,EAAMO,sBACNP,EAAMQ,oBAxCR,EAAKf,MAAQ,CACX+C,UAAW,GACXnB,SAAU,GACVC,MAAO,GACPrB,SAAU,GACVI,SAAU,IAPK,E,qDA4GjB,OACE,yBAAKX,UAAU,wBACb,wBAAIA,UAAU,aAAd,WACA,wBAAIA,UAAU,gBAAd,uCACA,6BACA,kBAACiC,EAAA,EAAD,KACE,kBAACgB,EAAA,EAAD,KACE,kBAAChB,EAAA,EAAKC,MAAN,CAAYgB,GAAIC,IAAKhB,UAAU,aAC7B,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,aACZE,MAAO,CAAEC,KAAM,SAGnB,kBAACR,EAAA,EAAKC,MAAN,CAAYgB,GAAIC,IAAKhB,UAAU,YAC7B,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,YACZE,MAAO,CAAEC,KAAM,UAKrB,kBAACR,EAAA,EAAKC,MAAN,CAAYC,UAAU,SACpB,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,QACZC,UAAQ,EACRC,MAAO,CAAEC,KAAM,QAEjB,kBAACR,EAAA,EAAKmB,KAAN,CAAWZ,MAAO,CAAEa,MAAO,UAA3B,mDAIF,kBAACpB,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,WACZC,UAAQ,EACRC,MAAO,CAAEC,KAAM,SAGnB,kBAACR,EAAA,EAAKC,MAAN,CAAYC,UAAU,YACpB,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,WACZC,UAAQ,EACRC,MAAO,CAAEC,KAAM,SAGnB,kBAACR,EAAA,EAAKC,MAAN,CAAYC,UAAU,mBACpB,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,mBACZC,UAAQ,EACRC,MAAO,CAAEC,KAAM,SAGnB,kBAAC,IAAD,CACExC,GAAG,kBACHD,UAAU,gBACVqC,KAAK,SACLK,QAASC,KAAKtC,cAJhB,iB,GAvKWH,aCEfoD,EAEJ,WAAYC,EAAUC,EAAMC,EAAYC,EAAWC,GAAgB,oBACjEhB,KAAKY,SAAWA,EAChBZ,KAAKa,KAAOA,EACZb,KAAKc,WAAaA,EAClBd,KAAKe,UAAYA,EACjBf,KAAKgB,cAAgBA,GA6HVC,E,kDAxHb,WAAYxD,GAAQ,IAAD,8BACjB,cAAMA,IAiBRyD,gBAAkB,WAChB,IAAMN,EAAW/C,SAASC,eAAe,YAAYC,MAC/C8C,EAAOhD,SAASC,eAAe,QAAQC,MACvC+C,EAAajD,SAASC,eAAe,cAAcC,MACnDgD,EAAYlD,SAASC,eAAe,aAAaC,MACjDiD,EAAgBnD,SAASC,eAAe,iBAAiBC,MAC3DoD,EAAW,IAAIR,EACjBC,EACAC,EACAC,EACAC,EACAC,GAEF,EAAKI,SACH,CAAEC,WAAY,EAAKjE,MAAMiE,WAAWC,OAAOH,IAC3ClD,MAAMkD,EAASL,WAAa,qCAE9B,EAAKZ,aAnCY,EAsCnBqB,iBAAmB,WAiBlB,EAAKnE,MAAMiE,WAAWG,KAAI,SAACC,GAAD,OACxBrD,IAAEC,KAAK,CACNC,IAAK,6CACJC,KAAM,CACJuC,WAAYW,EAAEX,WACdE,cAAeS,EAAET,cACjBD,UAAWU,EAAEV,UACbF,KAAMY,EAAEZ,KACRD,SAAUa,EAAEb,UAEdnC,QAAS,SAASF,GAChBG,QAAQC,IAAIJ,UAhEjB,EAAKnB,MAAQ,CACXiE,WAAY,IAHG,E,wDAWjBxD,SAASC,eAAe,YAAYC,MAAQ,GAC5CF,SAASC,eAAe,QAAQC,MAAQ,GACxCF,SAASC,eAAe,cAAcC,MAAQ,GAC9CF,SAASC,eAAe,aAAaC,MAAQ,GAC7CF,SAASC,eAAe,iBAAiBC,MAAQ,K,+BA2DjD,OACE,yBAAKV,UAAU,wBACb,wBAAIA,UAAU,aAAd,mBACA,wBAAIA,UAAU,gBAAd,6CAIA,wBAAIA,UAAU,gBAAd,0CACA,6BACA,kBAACiC,EAAA,EAAD,KACE,kBAACgB,EAAA,EAAD,KACE,kBAAChB,EAAA,EAAKC,MAAN,CAAYgB,GAAIC,IAAKhB,UAAU,YAC7B,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWE,MAAO,CAAEC,KAAM,SAElE,kBAACR,EAAA,EAAKC,MAAN,CAAYgB,GAAIC,IAAKhB,UAAU,QAC7B,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,OAAOE,MAAO,CAAEC,KAAM,UAIhE,kBAACR,EAAA,EAAKC,MAAN,CAAYC,UAAU,cACpB,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,cAAcC,UAAQ,EAACC,MAAO,CAAEC,KAAM,SAE9E,kBAACR,EAAA,EAAKC,MAAN,CAAYC,UAAU,aACpB,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,YAAYC,UAAQ,EAACC,MAAO,CAAEC,KAAM,SAE5E,kBAACR,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBACpB,kBAACF,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,iBAAiBC,UAAQ,EAACC,MAAO,CAAEC,KAAM,SAEjF,kBAACQ,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,4BAAQnD,UAAU,aAAa0C,QAASC,KAAKkB,iBAA7C,eAIF,kBAACV,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMlD,GAAG,aAAayC,QAASC,KAAKuB,kBAClC,4BAAQlE,UAAU,cAAlB,mB,GA/GaE,a,QCWdoD,G,6KAzBX,OACE,6BACE,wBAAItD,UAAU,kBAAd,aAA0C2C,KAAKvC,MAAMmD,UACrD,wBAAKf,MAAO,CACRa,MAAO,UACPgB,gBAAiB,UACjBC,OAAQ,GACRC,YAAc,aAElB,6BACE,uBAAGvE,UAAU,gBAAgB2C,KAAKvC,MAAMqD,YACxC,uBAAGzD,UAAU,gBAAb,YAAsC2C,KAAKvC,MAAMuD,eACjD,uBAAG3D,UAAU,gBAAgB2C,KAAKvC,MAAMsD,YAE1C,wBAAKlB,MAAO,CACRa,MAAO,UACPgB,gBAAiB,UACjBC,OAAQ,GACRC,YAAc,kB,GApBLrE,cCiENsE,E,kDA/Db,WAAYpE,GAAO,IAAD,8BAChB,cAAMA,IACDL,MAAM,CACTiE,WAAY,CACVS,QAAU,GACVC,MAAM,KALM,E,gEAWhB3D,IAAEC,KAAK,CACLC,IAAK,qDACL0D,SAAU,OACVxD,OAAO,EACPC,QAAS,SAASF,GAChBG,QAAQC,IAAIJ,GACZyB,KAAKoB,SAAS,CACZC,WAAY9C,KAEd0D,KAAKjC,QAETtB,QAAQC,IAAIqB,KAAK5C,MAAMiE,c,+BAuBvB,IAAMnC,EAAUc,KAAK5C,MAAMiE,WAAWS,QAAQN,KAAI,SAChDU,GADgD,OAGhD,6BACE,kBAAC,EAAD,CACEC,IAAKD,EAAOlB,cACZJ,SAAUsB,EAAOtB,SACjBE,WAAYoB,EAAOpB,WACnBC,UAAWmB,EAAOnB,UAClBC,cAAekB,EAAOlB,gBAExB,iCAGJ,OAAO,6BAAM9B,O,GA5DM3B,aCWR6E,E,4MAXbhF,MAAQ,G,uDAEN,OACA,6BACG,0BAAMyC,MAAS,CAACa,MAAO,UAAvB,UAAyCvB,aAAakD,QAAQ,kB,GALlD9E,a,QCsIJ+E,G,kNAnIblF,MAAQ,CACN8E,OAAQ,GACRnB,UAAW,GACXwB,SAAU,EACVC,QAAS,EACTC,QAAS,I,EAEXC,OAAS,SAACC,GACR,EAAKvB,SAAL,eACGuB,EAAEC,OAAO9D,KAAO6D,EAAEC,OAAO7E,S,EAG9BL,aAAe,SAACiF,GAEd,GADAjE,QAAQC,IAAI,EAAKvB,SAGb,EAAKA,MAAM8E,QACX,EAAK9E,MAAM2D,WACX,EAAK3D,MAAMmF,UACX,EAAKnF,MAAMoF,SACX,EAAKpF,MAAMqF,SAMb,OAHAxE,MAAM,iCACN0E,EAAEzE,sBACFyE,EAAExE,kBAIJC,IAAEC,KAAK,CACLC,IAAK,oDACLC,KAAM,CACJuC,WAAY,EAAK1D,MAAM8E,OACvBK,SAAU,EAAKnF,MAAMmF,SACrBC,QAAS,EAAKpF,MAAMoF,QACpBC,QAAS,EAAKrF,MAAMqF,QACpB1B,UAAW,EAAK3D,MAAM2D,aAG1B9C,MAAM,cAAgB,EAAKb,MAAM8E,OAAS,Y,uDAGlC,IAAD,OACP,OACE,6BACE,wBAAI7E,UAAU,SAAd,mBACA,6BACA,0BAAMwF,SAAU7C,KAAKtC,cACnB,yBAAKL,UAAU,UACb,4BACEyB,KAAK,SACLf,MAAOiC,KAAK5C,MAAM8E,OAClBY,SAAU,SAACH,GAAD,OAAO,EAAKD,OAAOC,KAE7B,4BAAQ5E,MAAM,OAAOgF,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAA7C,UAGA,4BAAQlF,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,cAGJ,6BACA,yBAAKV,UAAU,aACb,2BACEyB,KAAK,YACLa,YAAY,YACZ5B,MAAOiC,KAAK5C,MAAM2D,UAClB+B,SAAU,SAACH,GAAD,OAAO,EAAKD,OAAOC,OAIjC,yBAAKtF,UAAU,YACb,4BACEyB,KAAK,WACLf,MAAOiC,KAAK5C,MAAMmF,SAClBO,SAAU,SAACH,GAAD,OAAO,EAAKD,OAAOC,KAE7B,4BAAQ5E,MAAM,OAAOgF,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAA7C,YAGA,4BAAQlF,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAEF,uBAAGV,UAAU,iBAAb,yBAGF,yBAAKA,UAAU,WACb,4BACEyB,KAAK,UACLf,MAAOiC,KAAK5C,MAAMoF,QAClBM,SAAU,SAACH,GAAD,OAAO,EAAKD,OAAOC,KAE7B,4BAAQ5E,MAAM,OAAOgF,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAA7C,WAGA,4BAAQlF,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAEF,uBAAGV,UAAU,iBAAb,uBAGF,yBAAKA,UAAU,mBACb,8BACEqC,KAAK,OACLZ,KAAK,UACLf,MAAOiC,KAAK5C,MAAMqF,QAClB9C,YAAY,UACZuD,MAAM,eACNJ,SAAU,SAACH,GAAD,OAAO,EAAKD,OAAOC,OAGjC,6BACA,yBAAKtF,UAAU,UACb,2BAAOqC,KAAK,SAAS3B,MAAM,kB,GA5HlBR,cCJR4F,EAAgB,CAC3B,CACEC,GAAI,IACJC,SAAU,iDACVC,QAAS,GACTC,UAAW,EACXC,OAAQ,CACN,CACEf,QAAS,cACTa,QAAS,IACTC,UAAW,GAEb,CACEd,QAAS,6BACTa,QAAS,GACTC,UAAW,GAEb,CACEd,QACE,iEACFa,QAAS,EACTC,UAAW,KAIjB,CACEH,GAAI,IACJC,SAAU,6CACVC,QAAS,EACTC,UAAW,EACXC,OAAQ,CACN,CACEf,QAAS,0CACTa,QAAS,EACTC,UAAW,GAEb,CACEd,QAAS,QACTa,QAAS,EACTC,UAAW,GAEb,CACEd,QAAS,sBACTa,QAAS,GACTC,UAAW,GAEb,CACEd,QAAS,mBACTa,QAAS,GACTC,UAAW,IAEb,CACEd,QAAS,YACTa,QAAS,EACTC,UAAW,KAIjB,CACEH,GAAI,IACJC,SAAU,yBACVC,QAAS,GACTC,UAAW,EACXC,OAAQ,CACN,CACEf,QACE,kHACFa,QAAS,GACTC,UAAW,GAEb,CACEd,QACE,0UACFa,QAAS,GACTC,UAAW,GAEb,CACEd,QACE,mHACFa,QAAS,EACTC,UAAW,GAEb,CACEd,QACE,0FACFa,QAAS,GACTC,UAAW,GAEb,CACEd,QACE,oJACFa,QAAS,EACTC,UAAW,MAIjB,CACEH,GAAI,IACJC,SAAU,yBACVC,QAAS,GACTC,UAAW,GACXC,OAAQ,CACN,CACEf,QAAS,+BACTa,QAAS,GACTC,UAAW,GAEb,CACEd,QAAS,iCACTa,QAAS,EACTC,UAAW,GAEb,CACEd,QAAS,8BACTa,QAAS,EACTC,UAAW,GAEb,CACEd,QAAS,+BACTa,QAAS,EACTC,UAAW,KAIjB,CACEH,GAAI,IACJC,SAAU,4CACVC,QAAS,GACTC,UAAW,EACXC,OAAQ,CACN,CACEf,QAAS,UACTa,QAAS,EACTC,UAAW,MCvCJE,E,4MArFbrG,MAAQ,G,EAERsG,YAAc,WACZ,IAAMC,EAAY9F,SAASC,eAAe,uBACxB,OAAd6F,GACF,EAAKlG,MAAMmG,SAASD,EAAU5F,Q,uDAKhC,OACE,yBAAKmF,MAAM,sBACT,yBAAK7F,UAAU,oBACb,wBAAIA,UAAU,eAAd,YACY8B,aAAakD,QAAQ,cAGnC,yBAAKhF,UAAU,qBACf,kBAAC,IAAD,CAAMC,GAAG,wBACL,4BAAQD,UAAU,qBAAlB,gBAGJ,yBAAKA,UAAU,0BACb,2BACEA,UAAU,gBACV+F,GAAG,sBACH1D,KAAK,OACLC,YAAY,6CACZkE,QAAS7D,KAAK0D,cAEhB,kBAAC,IAAD,CAAMpG,GAAG,6BACP,4BAAQD,UAAU,oBAAlB,YAGJ,yBAAKA,UAAU,0BACb,2BAAOA,UAAU,eAAjB,eAEF,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,wBACb,2BAAOA,UAAU,eAAjB,eAEF,yBAAKA,UAAU,mBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,sBACb,2BAAOA,UAAU,eAAjB,YAEF,yBAAKA,UAAU,iBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,wBACb,2BAAOA,UAAU,eAAjB,mBAEF,yBAAKA,UAAU,mBACZ8F,EAAc3B,KAAI,SAACsC,GAAD,OACjB,yBAAKzG,UAAU,oBACb,kBAAC,IAAD,CACEC,GAAI,uBAAyBwG,EAAMV,GACnCvD,MAAO,CAAEa,MAAO,UAEfoD,EAAMT,UAET,uC,GAjEU9F,aC2BTwG,E,4MA/BbL,YAAc,WACZ,IAAMC,EAAY9F,SAASC,eAAe,wBACxB,OAAd6F,GACF,EAAKlG,MAAMmG,SAASD,EAAU5F,Q,uDAIhC,OACE,yBAAKV,UAAU,2BACb,wBAAIA,UAAU,eAAd,cACA,6BACA,yBAAKA,UAAU,2BACb,2BACEA,UAAU,iBACV+F,GAAG,uBACH1D,KAAK,OACLC,YAAY,6CACZkE,QAAS7D,KAAK0D,cAEhB,kBAAC,IAAD,CAAMpG,GAAG,6BACP,4BAAQD,UAAU,qBAAlB,YAGJ,kBAAC,IAAD,CAAMC,GAAG,wBACP,4BAAQD,UAAU,kBAAlB,wB,GAzBmBE,a,gBCKzByG,G,MAAc,CAChB,CACEtE,KAAM,SACN0D,GAAI,EACJ7E,KAAM,CACJqC,SAAU,SACVC,KAAM,OACNqB,OAAQ,+CACRnB,UAAW,iBACXC,cAAe,UAGnB,CACEtB,KAAM,SACN0D,GAAI,EACJ7E,KAAM,CACJqC,SAAU,SACVC,KAAM,OACNqB,OAAQ,+DACRnB,UAAW,oBACXC,cAAe,UAGnB,CACEtB,KAAM,SACN0D,GAAI,EACJ7E,KAAM,CACJqC,SAAU,SACVC,KAAM,OACNqB,OAAQ,uDACRnB,UAAW,oBACXC,cAAe,UAGnB,CACEtB,KAAM,SACN0D,GAAI,EACJ7E,KAAM,CACJqC,SAAU,SACVC,KAAM,OACNqB,OAAQ,iDACRnB,UAAW,oBACXC,cAAe,YAuKNiD,E,4MAjKb7G,MAAQ,CACN8G,eAAgB,GAChBP,UAAW,GACXQ,YAAa,CACX,CACEzE,KAAM,GACN0D,GAAI,GACJ7E,KAAM,M,EAKZ6F,kBAAoB,WAClB,EAAKhD,SAAS,CAAEuC,UAAW,EAAKlG,MAAMkG,YACtC,EAAKvC,SAAS,CAAE+C,YAAaH,K,EAsB/BK,UAAY,SAACC,GACX,MAAoB,UAAhBA,EAAO5E,KACF4E,EAAO/F,KAAK8E,SAEZiB,EAAO/F,KAAK2D,Q,EAIvBwB,YAAc,WACZ,IAAMQ,EAAiBrG,SAASC,eAAe,iBACxB,OAAnBoG,GACF,EAAK9C,SAAS,CAAE8C,eAAgBA,EAAenG,S,EAInDwG,aAAe,WAEL,eACR,EAAKnD,SAAS,CAAEuC,UAAW,EAAKvG,MAAM8G,kB,uDAc9B,IAAD,OACDM,EAAcxE,KAAK5C,MAAM+G,YAAY3C,KAAI,SAAC8C,GAAD,OAC7C,6BACE,6BACA,wBAAIjH,UAAU,qBACXiH,EAAO5E,KAAK+E,cAAgB,MAE/B,kBAAC,IAAD,CACEpH,UAAU,oBACV8E,IAAKmC,EAAOlB,GACZ9F,GAAIgH,EAAO5E,KAAO,OAAS4E,EAAOlB,GAAGsB,YAEpC,EAAKL,UAAUC,IAElB,iCAGEK,EAAc3E,KAAK5C,MAAM+G,YAAY3C,KAAI,SAAC8C,GAC9C,MAAoB,UAAhBA,EAAO5E,KAEP,kBAAC,IAAD,CAAOkF,KAAM,uBAAyBN,EAAOlB,GAAGsB,YAC9C,kBAAC,EAAD,CACEvC,IAAKmC,EAAOlB,GACZC,SAAUiB,EAAO/F,KAAK8E,SACtBC,QAASgB,EAAO/F,KAAK+E,QACrBC,UAAWe,EAAO/F,KAAKgF,UACvBC,OAAQc,EAAO/F,KAAKiF,OACpB9F,aAAc,EAAKmH,oBAIA,WAAhBP,EAAO5E,KAEd,kBAAC,IAAD,CAAOkF,KAAM,wBAA0BN,EAAOlB,GAAGsB,YAC/C,kBAAC,EAAD,CACEvC,IAAKmC,EAAOlB,GACZxC,SAAU0D,EAAO/F,KAAKqC,SACtBC,KAAMyD,EAAO/F,KAAKsC,KAClBC,WAAYwD,EAAO/F,KAAK2D,OACxBnB,UAAWuD,EAAO/F,KAAKuG,cACvB9D,cAAesD,EAAO/F,KAAKyC,iBAIR,WAAhBsD,EAAO5E,KAEd,kBAAC,IAAD,CAAOkF,KAAM,wBAA0BN,EAAOlB,GAAGsB,YAC/C,kBAAC,EAAD,CACEvC,IAAKmC,EAAOlB,GACZlB,OAAQoC,EAAO/F,KAAK2D,OACpBnB,UAAWuD,EAAO/F,KAAKwC,UACvBwB,SAAU+B,EAAO/F,KAAKgE,SACtBC,QAAS8B,EAAO/F,KAAKiE,QACrBC,QAAS6B,EAAO/F,KAAKkE,gBATtB,KAeT,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmC,KAAK,6BACV,yBAAKvH,UAAU,0BACb,yBAAKA,UAAU,6BACb,2BACEA,UAAU,gBACV+F,GAAG,gBACH1D,KAAK,OACLC,YAAY,6CACZkE,QAAS7D,KAAK0D,cAEhB,4BACE3D,QAASC,KAAKuE,aACdlH,UAAU,oBAFZ,WAOF,wBAAIA,UAAU,sBAAd,kBACA,wBAAIA,UAAU,0BAAd,wBACwB2C,KAAK5C,MAAMuG,WAElCa,IAGJG,Q,GA3JiBpH,aC6FbwH,E,4MA/Ib3H,MAAQ,CACN4H,QAAS,GACTC,MAAO,I,EAGTb,kBAAoB,WAClB1F,QAAQC,IAAI,EAAKlB,MAAM+F,QACvB,EAAKpC,SAAS,CAAE4D,QAAS,EAAKvH,MAAM+F,U,EAuCtC0B,YAAc,SAAC/C,GACb,EAAKf,SAAS,CAAC4D,QAAS,EAAK5H,MAAM4H,QAAQxD,KAAI,SAAA2D,GAO7C,OANGA,EAAGhD,MAAMA,IACNgD,EAAGC,UACLD,EAAGC,SAAQ,EACXD,EAAG7B,YAGA6B,Q,EAIXE,eAAiB,SAAClD,GAChB,EAAKf,SAAS,CAAC4D,QAAS,EAAK5H,MAAM4H,QAAQxD,KAAI,SAAA2D,GAO7C,OANGA,EAAGhD,MAAMA,IACNgD,EAAGG,SACLH,EAAGG,QAAO,EACVH,EAAG5B,cAGA4B,Q,EAIXI,aAAe,WACb,GAAsB,KAAnB,EAAKnI,MAAM6H,OAAiC,OAAnB,EAAK7H,MAAM6H,MAKvC,KAAI9C,EAAM,EAAK/E,MAAM4H,QAAQ,EAAK5H,MAAM4H,QAAQQ,OAAQ,GAAGrD,IAC3DA,GAAQ,EAIG,EAAK/E,MAAM6H,WATpBhH,MAAM,kC,EAoBVwH,SAAW,SAAA9C,GACT,EAAKvB,SAAS,CACZ6D,MAAOtC,EAAEC,OAAO7E,S,uDAKV,IAAD,OACH2H,EAAU,GAqBd,OAnBEA,EADE1F,KAAK5C,MAAM4H,QACHhF,KAAK5C,MAAM4H,QAAQxD,KAAI,SAACC,GAAD,OAC/B,yBAAKpE,UAAU,iBACb,wBAAIA,UAAU,gBAAgBoE,EAAEgB,SAChC,2BACE,4BAAQpF,UAAY,mBAAmB0C,QAAS,kBAAM,EAAKmF,YAAYzD,EAAEU,OACzE,0BAAMtC,MAAO,CAACa,MAAM,UAApB,YACU,YACV,0BAAMrD,UAAU,YAAYoE,EAAE6B,SAAgB,IAC/C,4BAAQjG,UAAY,kBAAkB0C,QAAS,kBAAM,EAAKsF,eAAe5D,EAAEU,OAC3E,0BAAMtC,MAAO,CAACa,MAAO,QAArB,eAND,IAOY,IACX,0BAAMrD,UAAU,eAAeoE,EAAE8B,gBAM5B,6EAGV,6BACE,wBAAIlG,UAAU,kBAAkB2C,KAAKvC,MAAM4F,UAC3C,6BACA,0BAAMR,SAAU7C,KAAKuF,cACrB,yBAAKlI,UAAU,mBACb,yBAAKA,UAAU,SACb,4BAAI,0BAAMqD,MAAM,SAAZ,iBAEN,8BAAUrD,UAAU,eAAesI,KAAK,IAAIvC,GAAG,UAAUtE,KAAK,QAAQf,MAAOiC,KAAK5C,MAAM6H,MAAOnC,SAAU9C,KAAKyF,YAEhH,yBAAKpI,UAAU,UACX,2BAAOqC,KAAK,SAAS3B,MAAM,aAAa8B,MAAO,CAAC+F,OAAQ,OAE5D,8BAECF,O,GA1IYnI,a,QCuFNsI,G,kNAlFbzI,MAAQ,CACN0I,cAAe,GACfC,aAAc,GACdjF,WAAY,I,EAGdyE,aAAe,SAAC5C,GACd,IAAM7B,EAAajD,SAASC,eAAe,UAAUC,MACrDW,QAAQC,IAAImC,GACZ,IAAMiF,EAAelI,SAASC,eAAe,QAAQC,MACrDW,QAAQC,IAAIoH,GACZ,IAAMD,EAAgBjI,SAASC,eAAe,SAASC,MAEvD,GADAW,QAAQC,IAAImH,GACO,gBAAfhF,IAAiCiF,IAAiBD,EAIpD,OAHA7H,MAAM,6BACN0E,EAAEzE,sBACFyE,EAAExE,kBAGJF,MAAM,gD,uDAgBN,OACE,yBAAKZ,UAAU,YACb,wBAAIA,UAAU,eAAd,kBACA,6BAEA,kBAACiC,EAAA,EAAD,CAAMuD,SAAU7C,KAAKuF,aAAclI,UAAU,eAC3C,kBAACiC,EAAA,EAAKgB,IAAN,KACE,kBAAChB,EAAA,EAAKC,MAAN,CAAYC,UAAU,SACpB,kBAACF,EAAA,EAAK0G,MAAN,CAAY3I,UAAU,iBAAtB,kBACA,kBAACiC,EAAA,EAAKG,QAAN,CAAcpC,UAAU,cAAcsC,YAAY,kBAItD,kBAACL,EAAA,EAAKgB,IAAN,KACE,kBAAChB,EAAA,EAAKC,MAAN,CAAYC,UAAU,UACpB,kBAACF,EAAA,EAAK0G,MAAN,CAAY3I,UAAU,iBAAtB,kEAGA,kBAACiC,EAAA,EAAKG,QAAN,CAAcpC,UAAU,cAAckD,GAAG,UACvC,4BAAQxC,MAAM,cAAckI,cAAY,GAAxC,iBAGA,4BAAQlI,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,eAKN,kBAACuB,EAAA,EAAKgB,IAAN,KACE,kBAAChB,EAAA,EAAKC,MAAN,CAAYC,UAAU,QACpB,kBAACF,EAAA,EAAK0G,MAAN,CAAY3I,UAAU,iBAAtB,kBACA,kBAACiC,EAAA,EAAKG,QAAN,CAAcpC,UAAU,cAAckD,GAAG,WAAW2F,KAAK,SAI7D,yBAAKhD,MAAM,eACT,kBAACiD,EAAA,EAAD,CAAQzG,KAAK,UAAb,uB,GA3EWnC,cCsDR6I,E,4MApDbhJ,MAAQ,CACNuG,UAAW,I,EAGbY,aAAe,SAACZ,GACd,EAAKvC,SAAS,CAAEuC,UAAWA,K,uDAI3B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0C,OAAK,EAACzB,KAAK,cACsB,OAArCzF,aAAakD,QAAQ,YACpB,kBAAC,EAAD,CAAgBuB,SAAU5D,KAAKuE,eAE/B,kBAAC,EAAD,CAAWX,SAAU5D,KAAKuE,gBAY9B,kBAAC,IAAD,CAAOK,KAAK,6BACV,kBAAC,EAAD,CAAejB,UAAW3D,KAAK5C,MAAMuG,aAEtCR,EAAc3B,KAAI,SAACsC,GAAD,OACjB,kBAAC,IAAD,CAAOc,KAAM,uBAAyBd,EAAMV,IAC1C,kBAAC,EAAD,CACEjB,IAAK2B,EAAMV,GACXC,SAAUS,EAAMT,SAChBC,QAASQ,EAAMR,QACfC,UAAWO,EAAMP,UACjBC,OAAQM,EAAMN,aAKpB,kBAAC,IAAD,CAAOoB,KAAK,wBACV,kBAAC,EAAD,a,GA7CmBrH,aCsBhB+I,E,kDA3Bb,WAAY7I,GAAQ,IAAD,8BACjB,cAAMA,IACDL,MAAQ,GAFI,E,4DAMjB,OAAI+B,aAAakD,QAAQ,YAChB,aAEA,M,+BAIT,OACE,yBAAKhF,UAAU,UACb,kBAAC,IAAD,CACEC,GAAI0C,KAAKuG,gBACTlJ,UAAU,SACVwC,MAAO,CAAEa,MAAO,UAHlB,mB,GAhBanD,aCuDNiJ,E,kDA7Cb,WAAY/I,GAAQ,IAAD,8BACjB,cAAMA,IACDL,MAAQ,GAFI,E,qDAUjB,OACE,kBAAC,IAAD,CAAQqJ,SAAUC,8HAAYC,uBAAyB,IACrD,yBAAKtJ,UAAU,gBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgJ,OAAK,EAACzB,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,mBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,wBACV,kBAAC,EAAD,e,GApCSrH,aCNzBqJ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFjJ,SAASC,eAAe,SlByHpB,kBAAmBiJ,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5I,QAAQ4I,MAAMA,EAAMC,c","file":"static/js/main.f7ffdd74.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Landing.css\";\nimport { Link } from \"react-router-dom\";\nclass Landing extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"landingContainer\">\n        <Link to=\"/signin\">\n          <button className=\"landingButton\">SIGN IN</button>\n        </Link>\n        <br />\n        <Link to=\"/signup\">\n          <button className=\"landingButton\">SIGN UP</button>\n        </Link>\n        <br />\n        <Link to=\"/dashboard\">\n          <button className=\"landingButton\">GUEST</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport \"../../App.css\";\nimport { Link } from \"react-router-dom\";\nimport $ from \"jquery\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n\n  handleSubmit = (event) => {\n    let validated = false;\n    const username = document.getElementById(\"username\").value;\n    const password = document.getElementById(\"password\").value;\n    //Check if Inputs are Filled out\n    if (!(username && password)) {\n      alert(\"Please fill out the entire form\");\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    //VALIDATE AGAINST SQL DATABASE\n    $.ajax({\n      url: \"http://localhost:8080/VirtualSal/signInValidation\",\n      data: {\n        username: username,\n        password: password,\n      },\n      async: false,\n      success: function (data) {\n        console.log(data);\n        console.log(data.validSignIn);\n        if (data.validSignIn === \"true\") {\n          //valid\n          const fname = data.name;\n          const lname = data.lastname;\n          const email = data.email;\n          const courses = data.courses;\n          localStorage.setItem(\"username\", username);\n          localStorage.setItem(\"fullName\", fname + \" \" + lname);\n          localStorage.setItem(\"email\", email);\n          localStorage.setItem(\"courses\", courses);\n          alert(\"You are now signed in!\");\n        } else if (\n          data.validSignIn === \"false\" &&\n          data.validUsername === \"true\"\n        ) {\n          //invalid, yet correct username\n          alert(\"Incorrect Password. Please try again.\");\n          event.preventDefault();\n          event.stopPropagation();\n          //reset form\n          document.getElementById(\"username\").value = \"\";\n        } else {\n          //invalid\n          alert(\"Incorrect Username and Password. Please try again.\");\n          event.preventDefault();\n          event.stopPropagation();\n          //reset form\n          document.getElementById(\"username\").value = \"\";\n          document.getElementById(\"password\").value = \"\";\n        }\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"formContainer\">\n        <h1 className=\"formTitle\">WELCOME</h1>\n        <h2 className=\"formSubtitle\">PLEASE SIGN IN TO CONTINUE</h2>\n        <br />\n        <Form>\n          <Form.Group controlId=\"username\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"USERNAME\"\n              required\n              style={{ left: \"0%\" }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Control\n              type=\"password\"\n              placeholder=\"PASSWORD\"\n              required\n              style={{ left: \"0%\" }}\n            />\n          </Form.Group>\n          <Link\n            to=\"/dashboard\"\n            className=\"landingButton\"\n            type=\"button\"\n            onClick={this.handleSubmit}\n          >\n            SIGN IN\n          </Link>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n","import React, { Component } from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport \"../../App.css\";\nimport { Link } from \"react-router-dom\";\nimport $ from \"jquery\";\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n    };\n  }\n\n  resetForm = () => {\n    //reset form\n    document.getElementById(\"firstname\").value = \"\";\n    document.getElementById(\"lastname\").value = \"\";\n    document.getElementById(\"email\").value = \"\";\n    document.getElementById(\"username\").value = \"\";\n    document.getElementById(\"password\").value = \"\";\n    document.getElementById(\"confirmPassword\").value = \"\";\n  };\n\n  handleSubmit = (event) => {\n    let validated = false;\n    const firstname = document.getElementById(\"firstname\").value;\n    const lastname = document.getElementById(\"lastname\").value;\n    const email = document.getElementById(\"email\").value;\n    const username = document.getElementById(\"username\").value;\n    const password = document.getElementById(\"password\").value;\n    const confirmpassword = document.getElementById(\"confirmPassword\").value;\n    //Check if Inputs are Filled out\n    if (\n      !(\n        firstname &&\n        lastname &&\n        email &&\n        username &&\n        password &&\n        confirmpassword\n      )\n    ) {\n      alert(\"Please fill out the entire form\");\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    //Check if password = confirmpassword\n    if (password !== confirmpassword) {\n      alert(\"Password and Confirm Password do no match.\");\n      event.preventDefault();\n      event.stopPropagation();\n      document.getElementById(\"password\").value = \"\";\n      document.getElementById(\"confirmPassword\").value = \"\";\n      return;\n    }\n    //VALIDATE AGAINST SQL DATABASE for Email/Username already taken\n    $.ajax({\n      url: \"http://localhost:8080/VirtualSal/signupvalidation\",\n      async: false,\n      data: {\n        username: username,\n        password: password,\n        firstname: firstname,\n        email: email,\n        lastname: lastname,\n      },\n      success: function (data) {\n        console.log(data);\n        if (data.validUsername === \"false\" || data.validEmail === \"false\") {\n          if (data.validUsername === \"false\" || data.validEmail === \"false\") {\n            alert(\"Both the username and password have already been taken.\");\n          } else if (data.validUsername === \"false\") {\n            alert(\"Username has been taken.\");\n          } else if (data.validEmail === \"false\") {\n            alert(\"Email has been taken.\");\n          }\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"fullName\", firstname + \" \" + lastname);\n        localStorage.setItem(\"email\", email);\n      },\n    });\n    /*\n    validated = true; //only for testing purposes\n    if (!validated) {\n      alert(\"Username or Email already taken. Please try again.\");\n      event.preventDefault();\n      event.stopPropagation();\n      this.resetForm();\n    } \n    else {\n      //ADD NEW USER TO DATABASE\n      //code goes here........................\n      this.setState({\n        firstname: firstname,\n        lastname: lastname,\n        email: email,\n        username: username,\n        password: password,\n      });\n      localStorage.setItem(\"username\", username);\n      alert(\"You are now signed up!\");\n    }\n    */\n  };\n\n  render() {\n    return (\n      <div className=\"formContainer-SignUp\">\n        <h1 className=\"formTitle\">WELCOME</h1>\n        <h2 className=\"formSubtitle\">PLEASE FILL OUT THE INFO TO SIGN UP</h2>\n        <br />\n        <Form>\n          <Row>\n            <Form.Group as={Col} controlId=\"firstname\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"FIRST NAME\"\n                style={{ left: \"0%\" }}\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"lastname\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"LAST NAME\"\n                style={{ left: \"0%\" }}\n              />\n            </Form.Group>\n          </Row>\n\n          <Form.Group controlId=\"email\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"EMAIL\"\n              required\n              style={{ left: \"0%\" }}\n            />\n            <Form.Text style={{ color: \"white\" }}>\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"username\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"USERNAME\"\n              required\n              style={{ left: \"0%\" }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"PASSWORD\"\n              required\n              style={{ left: \"0%\" }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"CONFIRM PASSWORD\"\n              required\n              style={{ left: \"0%\" }}\n            />\n          </Form.Group>\n          <Link\n            to=\"/uploadSchedule\"\n            className=\"landingButton\"\n            type=\"button\"\n            onClick={this.handleSubmit}\n          >\n            SIGN UP\n          </Link>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport \"../../App.css\";\nimport \"./Landing.css\";\nimport $ from \"jquery\";\n\nclass Course {\n  //used to store form info\n  constructor(semester, year, courseName, professor, sectionNumber) {\n    this.semester = semester;\n    this.year = year;\n    this.courseName = courseName;\n    this.professor = professor;\n    this.sectionNumber = sectionNumber;\n  }\n}\n\nclass UploadSchedule extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courseList: [],\n    };\n  }\n\n  // componentDidMount() {\n  //   this.setState({ courseList: [] });\n  // }\n  resetForm() {\n    document.getElementById(\"semester\").value = \"\";\n    document.getElementById(\"year\").value = \"\";\n    document.getElementById(\"courseName\").value = \"\";\n    document.getElementById(\"professor\").value = \"\";\n    document.getElementById(\"sectionNumber\").value = \"\";\n  }\n\n  handleNewCourse = () => {\n    const semester = document.getElementById(\"semester\").value;\n    const year = document.getElementById(\"year\").value;\n    const courseName = document.getElementById(\"courseName\").value;\n    const professor = document.getElementById(\"professor\").value;\n    const sectionNumber = document.getElementById(\"sectionNumber\").value;\n    let newClass = new Course(\n      semester,\n      year,\n      courseName,\n      professor,\n      sectionNumber\n    );\n    this.setState(\n      { courseList: this.state.courseList.concat(newClass) },\n      alert(newClass.courseName + \" has been added to your courses!\")\n    );\n    this.resetForm();\n  };\n\n  handleSubmission = () => {\n    //for testing, delete later\n    /*\n    this.state.courseList.map((course) =>\n      console.log(\n        course.courseName +\n          \": \" +\n          course.semester +\n          \", \" +\n          course.year +\n          \", \" +\n          course.professor +\n          \", \" +\n          course.sectionNumber\n      )\n    );\n    */\n   this.state.courseList.map((t) => (\n     $.ajax({\n      url: \"http://localhost:8080/VirtualSal/AddCourse\",\n       data: {\n         courseName: t.courseName,\n         sectionNumber: t.sectionNumber,\n         professor: t.professor,\n         year: t.year,\n         semester: t.semester\n       },\n       success: function(data){\n         console.log(data);\n         return\n       }\n     })\n   ));\n  };\n\n  render() {\n    return (\n      <div className=\"formContainer-Upload\">\n        <h1 className=\"formTitle\">SCHEDULE UPLOAD</h1>\n        <h2 className=\"formSubtitle\">\n          PLEASE FILL OUT THE INFO TO ADD A COURSE.\n        </h2>\n\n        <h3 className=\"formSubtitle\">PRESS SUBMIT TO CONTINUE TO DASHBOARD.</h3>\n        <br />\n        <Form>\n          <Row>\n            <Form.Group as={Col} controlId=\"semester\">\n              <Form.Control type=\"text\" placeholder=\"SEMESTER\" style={{ left: \"0%\" }}/>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"year\">\n              <Form.Control type=\"text\" placeholder=\"YEAR\" style={{ left: \"0%\" }}/>\n            </Form.Group>\n          </Row>\n\n          <Form.Group controlId=\"courseName\">\n            <Form.Control type=\"text\" placeholder=\"COURSE NAME\" required style={{ left: \"0%\" }}/>\n          </Form.Group>\n          <Form.Group controlId=\"professor\">\n            <Form.Control type=\"text\" placeholder=\"PROFESSOR\" required style={{ left: \"0%\" }}/>\n          </Form.Group>\n          <Form.Group controlId=\"sectionNumber\">\n            <Form.Control type=\"text\" placeholder=\"SECTION NUMBER\" required style={{ left: \"0%\" }}/>\n          </Form.Group>\n          <Row>\n            <Col>\n              <button className=\"formButton\" onClick={this.handleNewCourse}>\n                ADD COURSE\n              </button>\n            </Col>\n            <Col>\n              <Link to=\"/dashboard\" onClick={this.handleSubmission}>\n                <button className=\"formButton\">SUBMIT</button>\n              </Link>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default UploadSchedule;\n","import React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nclass Course extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"scheduleHeader\">Semester: {this.props.semester}</h1>\n        <hr  style={{\n            color: '#000000',\n            backgroundColor: '#000000',\n            height: .8,\n            borderColor : '#ffffff'\n        }}/>\n        <div>\n          <p className=\"scheduleText\">{this.props.courseName}</p>\n          <p className=\"scheduleText\">Section: {this.props.sectionNumber}</p>\n          <p className=\"scheduleText\">{this.props.professor}</p>\n        </div>\n        <hr  style={{\n            color: '#000000',\n            backgroundColor: '#000000',\n            height: .8,\n            borderColor : '#ffffff'\n        }}/>\n      </div>\n    );\n  }\n}\n\nexport default Course;\n","import React, { Component } from \"react\";\nimport Course from \"./Course.jsx\";\nimport $ from \"jquery\";\nclass Schedule extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      courseList: {\n        details : [],\n        valid:\"\",\n      },\n    }\n    \n  }\n  componentDidMount(){\n    $.ajax({\n      url: \"http://localhost:8080/VirtualSal/MyScheduleServlet\",\n      dataType: 'json',\n      async: false,\n      success: function(data){\n        console.log(data);\n        this.setState({\n          courseList: data\n        });\n      }.bind(this)\n    });\n    console.log(this.state.courseList);\n  }\n  render() {\n    /*\n    const sampleSchedule = [\n      {\n        semester: \"Spring\",\n        year: \"2020\",\n        courseName: \"CSCI201 - Principles of Software Development\",\n        professor: \"Jeffery Miller\",\n        sectionNumber: \"30112\",\n      },\n      {\n        semester: \"Spring\",\n        year: \"2020\",\n        courseName:\n          \"CSCI270 - Introduction to Algorithms and Theory of Computing\",\n        professor: \"Shahrair Shamsian\",\n        sectionNumber: \"30231\",\n      },\n    ];\n    */\n    // const courses = this.state.courseList.map((course) => (\n    const courses = this.state.courseList.details.map((\n      course //replace this line with above line\n    ) => (\n      <div>\n        <Course\n          key={course.sectionNumber}\n          semester={course.semester}\n          courseName={course.courseName}\n          professor={course.professor}\n          sectionNumber={course.sectionNumber}\n        />\n        <br />\n      </div>\n    ));\n    return <div>{courses}</div>;\n  }\n}\n\nexport default Schedule;\n","import React, { Component } from \"react\";\n\nclass Info extends Component {\n  state = {};\n  render() {\n    return (\n    <div>\n       <span style = {{color: \"white\"}}>Hello, {localStorage.getItem(\"username\")}</span>\n    </div>\n      \n    );\n  }\n}\n\nexport default Info;\n","import React, { Component } from \"react\";\nimport \"./Review.css\";\nimport $ from \"jquery\";\n\nclass Review extends Component {\n  state = {\n    course: \"\",\n    professor: \"\",\n    workload: 0,\n    clarity: 0,\n    comment: \"\",\n  };\n  change = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    console.log(this.state);\n    if (\n      !(\n        this.state.course &&\n        this.state.professor &&\n        this.state.workload &&\n        this.state.clarity &&\n        this.state.comment\n      )\n    ) {\n      alert(\"One or more fields left blank\");\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n    //log into SQL database\n    $.ajax({\n      url: \"http://localhost:8080/VirtualSal/AddReviewServlet\",\n      data: {\n        courseName: this.state.course,\n        workload: this.state.workload,\n        clarity: this.state.clarity,\n        comment: this.state.comment,\n        professor: this.state.professor,\n      }\n    });\n    alert(\"Review for \" + this.state.course + \" added!\");\n    return;\n  };\n  render() {\n    return (\n      <div>\n        <h1 className=\"title\">Create a Review</h1>\n        <br />\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"course\">\n            <select\n              name=\"course\"\n              value={this.state.course}\n              onChange={(e) => this.change(e)}\n            >\n              <option value=\"none\" selected disabled hidden>\n                Course\n              </option>\n              <option value=\"CSCI 103\">CSCI 103</option>\n              <option value=\"CSCI 109\">CSCI 109</option>\n              <option value=\"CSCI 170\">CSCI 170</option>\n              <option value=\"CSCI 201\">CSCI 201</option>\n              <option value=\"CSCI 270\">CSCI 270</option>\n              <option value=\"CSCI 310\">CSCI 310</option>\n            </select>\n          </div>\n          <br />\n          <div className=\"professor\">\n            <input\n              name=\"professor\"\n              placeholder=\"professor\"\n              value={this.state.professor}\n              onChange={(e) => this.change(e)}\n            />\n          </div>\n\n          <div className=\"workload\">\n            <select \n              name=\"workload\" \n              value={this.state.workload}\n              onChange={(e) => this.change(e)}\n            >\n              <option value=\"none\" selected disabled hidden>\n                Workload\n              </option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n            <p className=\"clarification\">1: Light, 5: Extreme</p>\n          </div>\n\n          <div className=\"clarity\">\n            <select\n              name=\"clarity\"\n              value={this.state.clarity}\n              onChange={(e) => this.change(e)}\n            >\n              <option value=\"none\" selected disabled hidden>\n                Clarity\n              </option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n            <p className=\"clarification\">1: Muddy, 5: Clear</p>\n          </div>\n\n          <div className=\"form-group w-50\">\n            <textarea\n              type=\"text\"\n              name=\"comment\"\n              value={this.state.comment}\n              placeholder=\"comment\"\n              class=\"form-control\"\n              onChange={(e) => this.change(e)}\n            />\n          </div>\n          <br />\n          <div className=\"submit\">\n            <input type=\"submit\" value=\"Submit\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Review;\n","export const popularForums = [\n  {\n    id: 100,\n    question: \"Who's the best professor in the CS department?\",\n    upvotes: 10,\n    downvotes: 3,\n    thread: [\n      {\n        comment: \"Miller!! <3\",\n        upvotes: 100,\n        downvotes: 2,\n      },\n      {\n        comment: \"Miller is easily the best.\",\n        upvotes: 80,\n        downvotes: 5,\n      },\n      {\n        comment:\n          \"It used to be Reddekop for me, but now it's definitely Miller!\",\n        upvotes: 6,\n        downvotes: 0,\n      },\n    ],\n  },\n  {\n    id: 101,\n    question: \"What's your favorite programming language?\",\n    upvotes: 6,\n    downvotes: 2,\n    thread: [\n      {\n        comment: \"mmm hard to decide, but probably Python\",\n        upvotes: 3,\n        downvotes: 1,\n      },\n      {\n        comment: \"Java!\",\n        upvotes: 7,\n        downvotes: 1,\n      },\n      {\n        comment: \"Python it's so easy\",\n        upvotes: 15,\n        downvotes: 4,\n      },\n      {\n        comment: \"C++, I'm a nerd!\",\n        upvotes: 18,\n        downvotes: 10,\n      },\n      {\n        comment: \"python :p\",\n        upvotes: 1,\n        downvotes: 0,\n      },\n    ],\n  },\n  {\n    id: 102,\n    question: \"Any programming jokes?\",\n    upvotes: 29,\n    downvotes: 2,\n    thread: [\n      {\n        comment:\n          \"Q. How did the programmer die in the shower? A. He read the shampoo bottle instructions: Lather. Rinse. Repeat.\",\n        upvotes: 15,\n        downvotes: 3,\n      },\n      {\n        comment:\n          \"A man is smoking a cigarette and blowing smoke rings into the air.  His girlfriend becomes irritated with the smoke and says, Can’t you see the warning on the cigarette pack?  Smoking is hazardous to your health! To which the man replies, I am a programmer.  We don’t worry about warnings; we only worry about errors.\",\n        upvotes: 12,\n        downvotes: 1,\n      },\n      {\n        comment:\n          \"Have you heard about the new Cray super computer?  It’s so fast, it executes an infinite loop in 6 seconds.\",\n        upvotes: 8,\n        downvotes: 3,\n      },\n      {\n        comment:\n          \"Why do programmers always mix up Halloween and Christmas? Because Oct 31 equals Dec 25.\",\n        upvotes: 11,\n        downvotes: 1,\n      },\n      {\n        comment:\n          \"A programmer walks to the butcher shop and buys a kilo of meat.  An hour later he comes back upset that the butcher shortchanged him by 24 grams.\",\n        upvotes: 3,\n        downvotes: 10,\n      },\n    ],\n  },\n  {\n    id: 103,\n    question: \"Internship megathread!\",\n    upvotes: 41,\n    downvotes: 18,\n    thread: [\n      {\n        comment: \"let's get rejected by google\",\n        upvotes: 15,\n        downvotes: 0,\n      },\n      {\n        comment: \"let's get rejected by facebook\",\n        upvotes: 2,\n        downvotes: 0,\n      },\n      {\n        comment: \"let's get rejected by apple\",\n        upvotes: 4,\n        downvotes: 0,\n      },\n      {\n        comment: \"let's get rejected by amazon\",\n        upvotes: 8,\n        downvotes: 0,\n      },\n    ],\n  },\n  {\n    id: 104,\n    question: \"What are the Most Abundant Careers in CS?\",\n    upvotes: 12,\n    downvotes: 3,\n    thread: [\n      {\n        comment: \"web dev\",\n        upvotes: 0,\n        downvotes: 0,\n      },\n    ],\n  },\n];\n\nexport default {\n  popularForums,\n};\n","import React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport \"./Dashboard.css\";\nimport Schedule from \"./Schedule.jsx\";\nimport Info from \"./Info.jsx\";\nimport { Link } from \"react-router-dom\";\nimport Review from \"./Review.jsx\";\nimport { popularForums } from \"./popularForums.jsx\";\nclass Dashboard extends Component {\n  state = {};\n\n  handleInput = () => {\n    const searchKey = document.getElementById(\"userDashboardSearch\");\n    if (searchKey !== null) {\n      this.props.onSearch(searchKey.value);\n    }\n  };\n\n  render() {\n    return (\n      <div class=\"dashboardContainer\">\n        <div className=\"welcomeContainer\">\n          <h1 className=\"welcomeText\">\n            WELCOME, {localStorage.getItem(\"fullName\")}\n          </h1>\n        </div>\n        <div className=\"questionContainer\">\n        <Link to=\"/dashboard/questions\">\n            <button className=\"askQuestionButton\" >+ Question</button>\n        </Link>\n        </div>\n        <div className=\"userSearchBarContainer\">\n          <input\n            className=\"userSearchBar\"\n            id=\"userDashboardSearch\"\n            type=\"text\"\n            placeholder=\"SEARCH FOR A QUESTION, A FORUM, OR A CLASS\"\n            onInput={this.handleInput}\n          ></input>\n          <Link to=\"/dashboard/search-results\">\n            <button className=\"userSearchButton\">search</button>\n          </Link>\n        </div>\n        <div className=\"scheduleTitleContainer\">\n          <label className=\"moduleTitle\">My Classes</label>\n        </div>\n        <div className=\"scheduleContainer\">\n          <Schedule />\n        </div>\n        <div className=\"reviewTitleContainer\">\n          <label className=\"moduleTitle\">My Reviews</label>\n        </div>\n        <div className=\"reviewContainer\">\n            <Review />\n        </div>\n        <div className=\"infoTitleContainer\">\n          <label className=\"moduleTitle\">My Info</label>\n        </div>\n        <div className=\"infoContainer\">\n          <Info />\n        </div>\n        <div className=\"forumsTitleContainer\">\n          <label className=\"moduleTitle\">Popular Forums</label>\n        </div>\n        <div className=\"forumsContainer\">\n          {popularForums.map((forum) => (\n            <div className=\"popularForumLink\">\n              <Link\n                to={\"/dashboard/forum-id=\" + forum.id}\n                style={{ color: \"white\" }}\n              >\n                {forum.question}\n              </Link>\n              <br />\n            </div>\n          ))}\n        </div>\n        {/* <div className=\"questionsTitleContainer\">\n          <label className=\"moduleTitle\">My Questions </label>\n        </div>\n        <div className=\"questionsContainer\">\n          <Questions />\n        </div> */}\n        {/* <div className=\"chatTitleContainer\">\n          <label className=\"moduleTitle\">My Chat</label>\n        </div>\n        <div className=\"chatContainer\">\n          <Chat />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Dashboard.css\";\nclass GuestDashboard extends Component {\n  handleInput = () => {\n    const searchKey = document.getElementById(\"guestDashboardSearch\");\n    if (searchKey !== null) {\n      this.props.onSearch(searchKey.value);\n    }\n  };\n  render() {\n    return (\n      <div className=\"guestDashboardContainer\">\n        <h1 className=\"guestHeader\">VirtualSal</h1>\n        <br />\n        <div className=\"guestSearchBarContainer\">\n          <input\n            className=\"guestSearchBar\"\n            id=\"guestDashboardSearch\"\n            type=\"text\"\n            placeholder=\"SEARCH FOR A QUESTION, A FORUM, OR A CLASS\"\n            onInput={this.handleInput}\n          ></input>\n          <Link to=\"/dashboard/search-results\">\n            <button className=\"guestSearchButton\">search</button>\n          </Link>\n        </div>\n        <Link to=\"/dashboard/questions\">\n          <button className=\"questionButton\">+ Ask Question</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default GuestDashboard;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Forums from \"../Dashboard/Forums\";\nimport Course from \"../Dashboard/Course\";\nimport Review from \"../Dashboard/Review\";\nimport \"./Search.css\";\nimport $ from \"jquery\";\n\nvar exampleList = [\n  {\n    type: \"course\",\n    id: 4,\n    data: {\n      semester: \"Spring\",\n      year: \"2020\",\n      course: \"CSCI201 - Principles of Software Development\",\n      professor: \"Jeffery Miller\",\n      sectionNumber: \"30112\",\n    },\n  },\n  {\n    type: \"course\",\n    id: 5,\n    data: {\n      semester: \"Spring\",\n      year: \"2020\",\n      course: \"CSCI270 - Introduction to Algorithms and Theory of Computing\",\n      professor: \"Shahrair Shamsian\",\n      sectionNumber: \"30231\",\n    },\n  },\n  {\n    type: \"course\",\n    id: 6,\n    data: {\n      semester: \"Spring\",\n      year: \"2020\",\n      course: \"CSCI104 - Data Structures and Object Oriented Design\",\n      professor: \"Shahrair Shamsian\",\n      sectionNumber: \"30231\",\n    },\n  },\n  {\n    type: \"course\",\n    id: 7,\n    data: {\n      semester: \"Spring\",\n      year: \"2020\",\n      course: \"CSCI170 - Discrete Methods in Computer Science\",\n      professor: \"Shahrair Shamsian\",\n      sectionNumber: \"30231\",\n    },\n  },\n];\n\nclass SearchResults extends Component {\n  state = {\n    searchBarInput: \"\",\n    searchKey: \"\",\n    resultsList: [\n      {\n        type: \"\",\n        id: \"\",\n        data: [],\n      },\n    ],\n  };\n\n  componentDidMount = () => {\n    this.setState({ searchKey: this.props.searchKey });\n    this.setState({ resultsList: exampleList });\n    //called once page renders\n    /*process the search key here (this.props.searchKey) and grab\n    other needed information from backend*/\n    // var that = this;\n    // $.ajax({\n    //   url: \"http://localhost:8080/VirtualSal/SearchResultsServlet\",\n    //   data: {\n    //     searchKey: this.props.searchKey,\n    //   },\n    //   async: false,\n    //   success: function (data) {\n    //     console.log(data);\n    //     that.setState({ resultsList: data });\n    //   },\n    //   error: function (data) {\n    //     console.log(data);\n    //     alert(\"error\");\n    //   },\n    // });\n  };\n\n  linkTitle = (result) => {\n    if (result.type === \"forum\") {\n      return result.data.question;\n    } else {\n      return result.data.course;\n    }\n  };\n\n  handleInput = () => {\n    const searchBarInput = document.getElementById(\"resultsSearch\");\n    if (searchBarInput !== null) {\n      this.setState({ searchBarInput: searchBarInput.value });\n    }\n  };\n\n  handleSearch = () => {\n    //query backend\n    var that = this;\n    this.setState({ searchKey: this.state.searchBarInput });\n    // $.ajax({\n    //   url: \"http://localhost:8080/VirtualSal/SearchResultsServlet\",\n    //   data: {\n    //     searchKey: this.state.searchBarInput,\n    //   },\n    //   async: false,\n    //   success: function (data) {\n    //     console.log(data);\n    //     that.setState({ resultsList: data });\n    //   },\n    // });\n  };\n\n  render() {\n    const searchLinks = this.state.resultsList.map((result) => (\n      <div>\n        <hr />\n        <h1 className=\"searchResultsLink\">\n          {result.type.toUpperCase() + \": \"}\n        </h1>\n        <Link\n          className=\"searchResultsLink\"\n          key={result.id}\n          to={result.type + \"-id=\" + result.id.toString()}\n        >\n          {this.linkTitle(result)}\n        </Link>\n        <hr />\n      </div>\n    ));\n    const searchPaths = this.state.resultsList.map((result) => {\n      if (result.type === \"forum\") {\n        return (\n          <Route path={\"/dashboard/forum-id=\" + result.id.toString()}>\n            <Forums\n              key={result.id}\n              question={result.data.question}\n              upvotes={result.data.upvotes}\n              downvotes={result.data.downvotes}\n              thread={result.data.thread}\n              handleSubmit={this.handleNewComment}\n            />\n          </Route>\n        );\n      } else if (result.type === \"course\") {\n        return (\n          <Route path={\"/dashboard/course-id=\" + result.id.toString()}>\n            <Course\n              key={result.id}\n              semester={result.data.semester}\n              year={result.data.year}\n              courseName={result.data.course}\n              professor={result.data.professorName}\n              sectionNumber={result.data.sectionNumber}\n            />\n          </Route>\n        );\n      } else if (result.type === \"review\") {\n        return (\n          <Route path={\"/dashboard/review-id=\" + result.id.toString()}>\n            <Review\n              key={result.id}\n              course={result.data.course}\n              professor={result.data.professor}\n              workload={result.data.workload}\n              clarity={result.data.clarity}\n              comment={result.data.comment}\n            />\n          </Route>\n        );\n      }\n    });\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/dashboard/search-results\">\n            <div className=\"searchResultsContainer\">\n              <div className=\"resultsSearchBarContainer\">\n                <input\n                  className=\"userSearchBar\"\n                  id=\"resultsSearch\"\n                  type=\"text\"\n                  placeholder=\"SEARCH FOR A QUESTION, A FORUM, OR A CLASS\"\n                  onInput={this.handleInput}\n                ></input>\n                <button\n                  onClick={this.handleSearch}\n                  className=\"userSearchButton\"\n                >\n                  search\n                </button>\n              </div>\n              <h1 className=\"searchResultsTitle\">Search Results</h1>\n              <h2 className=\"searchResultsSearchKey\">\n                Showing Results For: {this.state.searchKey}\n              </h2>\n              {searchLinks}\n            </div>\n          </Route>\n          {searchPaths}\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport \"./Forums.css\";\nimport SearchResults from \"../Search/SearchResults\";\n\nclass Forums extends Component {\n  state = {\n    sthread: [],\n    reply: \"\"\n  };\n\n  componentDidMount = () => {\n    console.log(this.props.thread);\n    this.setState({ sthread: this.props.thread });\n  };\n\n  /*\n  setColor = (s, key) => {\n    this.state.sthread.map(st =>{\n      if(st.key===key){\n        console.log(\"line 19 comment thread started\");\n        console.log(st);\n        if(s===\"yes\"){\n          if(this.state.sthread.voteYes){\n            console.log(\"bad\");\n            return  {\n              color: \"Gainsboro\",\n            };\n          }\n          console.log(\"good green is returned\")\n          return  {\n            color: \"green\",\n          };\n        }\n        if(s===\"no\"){\n          if(this.state.sthread.voteYes){\n            console.log(\"bad\");\n            return {\n              color: \"Gainsboro\",\n            };\n          }\n          console.log(\"good red is returned\")\n          return {\n            color: \"red\",\n          };\n        }\n      }\n    }\n    )\n  };\n  */\n\n  voteApprove = (key) => {\n    this.setState({sthread: this.state.sthread.map(st =>{\n      if(st.key===key){\n        if(!st.voteYes){\n          st.voteYes=true\n          st.upvotes++\n        }\n      }\n      return st\n    })});\n  };\n\n  voteDisapprove = (key) => {\n    this.setState({sthread: this.state.sthread.map(st =>{\n      if(st.key===key){\n        if(!st.voteNo){\n          st.voteNo=true\n          st.downvotes++\n        }\n      }\n      return st\n    })});\n  }\n\n  handlesubmit = () => {\n    if(this.state.reply===\"\" || this.state.reply===null){\n      alert(\"One or more fields left blank\");\n      return;\n    }\n\n    var key = this.state.sthread[this.state.sthread.length -1].key;\n    key=key+1;\n\n    const newReply ={\n      key: key,\n      comment: this.state.reply,\n      upvotes: 0,\n      downvotes: 0,\n      voteYes: false,\n      voteNo: false\n    }\n\n    return;\n\n  }\n\n  onchange = e => {\n    this.setState({\n      reply: e.target.value\n    });\n\n  };\n\n  render() {\n    var threads = \"\";\n    if (this.state.sthread) {\n      threads = this.state.sthread.map((t) => (\n        <div className=\"commentFormat\">\n          <h5 className=\"answerFormat\">{t.comment}</h5>\n          <p>\n            <button className = \"buttonFormat_yes\" onClick={() => this.voteApprove(t.key)}>\n            <span style={{color:\"green\"}}>Approve</span>\n            </button>{\"         \"}\n            <span className=\"numLikes\">{t.upvotes}</span>{\" \"}\n           <button className = \"buttonFormat_no\" onClick={() => this.voteDisapprove(t.key)}>\n           <span style={{color: \"red\"}}>Disapprove</span>\n           </button> {\" \"}\n           <span className=\"numDisLikes\">{t.downvotes}</span>\n          </p>\n        </div>\n      ));\n    } else {\n      //i'd add something to fill this in case we get a forum without any comments ie null thread\n      threads = <h2>No answers to this question from Trojans yet.</h2>\n    }\n    return (\n      <div>\n        <h1 className=\"questionFormat\">{this.props.question}</h1>\n        <br></br>\n        <form onSubmit={this.handlesubmit}>\n        <div className=\"form-group w-50\">\n          <div className=\"reply\">\n            <h5><font color=\"white\">Your Reply:</font></h5>\n          </div>\n          <textarea className=\"form-control\" rows=\"3\" id=\"comment\" name=\"reply\" value={this.state.reply} onChange={this.onchange}></textarea>\n        </div>\n        <div className=\"submit\">\n            <input type=\"submit\" value=\"Post Reply\" style={{margin: 10}}/>\n        </div>\n        <br></br>\n        </form>\n        {threads}\n      </div>\n    );\n  }\n}\n\nexport default Forums;\n","import React, { Component } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport $ from \"jquery\";\nimport \"./Question.css\";\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\n\nclass Question extends Component {\n  state = {\n    questionTitle: \"\",\n    questionBody: \"\",\n    courseName: \"\",\n  };\n\n  handlesubmit = (e) => {\n    const courseName = document.getElementById(\"course\").value;\n    console.log(courseName);\n    const questionBody = document.getElementById(\"body\").value;\n    console.log(questionBody);\n    const questionTitle = document.getElementById(\"title\").value;\n    console.log(questionTitle);\n    if (courseName === \"USC Courses\" || !questionBody || !questionTitle) {\n      alert(\"All fields must be filled\");\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n    alert(\"Your Question has been added to Virtual Sal\");\n    // $.ajax({\n    //     url: \"http://localhost:8080/VirtualSal/AddQuestions\",\n    //     async: false,\n    //     data: {\n    //         questionBody: questionBody,\n    //         questionTitle: questionTitle,\n    //         courseName: courseName,\n    //       },\n    //     success: function (data) {\n    //         alert(\"Your Question has been added to Virtual Sal\");\n    //     }\n    // })\n  };\n\n  render() {\n    return (\n      <div className=\"col-md-6\">\n        <h1 className=\"titleFormat\">Ask a Question</h1>\n        <br></br>\n\n        <Form onSubmit={this.handlesubmit} className=\"formControl\">\n          <Form.Row>\n            <Form.Group controlId=\"title\">\n              <Form.Label className=\"questionLabel\">Question Title</Form.Label>\n              <Form.Control className=\"answerField\" placeholder=\"Enter title\" />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group controlId=\"course\">\n              <Form.Label className=\"questionLabel\">\n                What USC Computer Science Course relates most to the question?\n              </Form.Label>\n              <Form.Control className=\"answerField\" as=\"select\">\n                <option value=\"USC Courses\" defaultValue>\n                  Select Course\n                </option>\n                <option value=\"CSCI 103\">CSCI 103</option>\n                <option value=\"CSCI 201\">CSCI 201</option>\n                <option value=\"CSCI 104\">CSCI 104</option>\n                <option value=\"CSCI 170\">CSCI 170</option>\n                <option value=\"CSCI 109\">CSCI 109</option>\n              </Form.Control>\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group controlId=\"body\">\n              <Form.Label className=\"questionLabel\">Enter Question</Form.Label>\n              <Form.Control className=\"answerField\" as=\"textarea\" cols=\"50\" />\n            </Form.Group>\n          </Form.Row>\n\n          <div class=\"submitButon\">\n            <Button type=\"submit\">Ask Question</Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Question;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\nimport GuestDashboard from \"./GuestDashboard\";\nimport Forums from \"./Forums\";\nimport SearchResults from \"../Search/SearchResults\";\nimport { popularForums } from \"./popularForums.jsx\";\nimport Question from \"./Question.jsx\";\n\nclass DashboardLanding extends Component {\n  state = {\n    searchKey: \"\",\n  };\n\n  handleSearch = (searchKey) => {\n    this.setState({ searchKey: searchKey });\n  };\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/dashboard\">\n            {localStorage.getItem(\"username\") === null ? (\n              <GuestDashboard onSearch={this.handleSearch} />\n            ) : (\n              <Dashboard onSearch={this.handleSearch} />\n            )}\n          </Route>\n          {/* <Route path=\"/dashboard/forums\">\n            <Forums\n              key={1}\n              question={sampleForum.question}\n              upvotes={sampleForum.upvotes}\n              downvotes={sampleForum.downvotes}\n              thread={sampleForum.thread}\n            />\n          </Route> */}\n          <Route path=\"/dashboard/search-results\">\n            <SearchResults searchKey={this.state.searchKey} />\n          </Route>\n          {popularForums.map((forum) => (\n            <Route path={\"/dashboard/forum-id=\" + forum.id}>\n              <Forums\n                key={forum.id}\n                question={forum.question}\n                upvotes={forum.upvotes}\n                downvotes={forum.downvotes}\n                thread={forum.thread}\n              />\n            </Route>\n\n          ))}\n          <Route path=\"/dashboard/questions\">\n            <Question />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default DashboardLanding;\n","import React, { Component } from \"react\";\nimport \"./../App.css\";\nimport { Link } from \"react-router-dom\";\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  dependentHome() {\n    if (localStorage.getItem(\"username\")) {\n      return \"/dashboard\";\n    } else {\n      return \"/\";\n    }\n  }\n  render() {\n    return (\n      <div className=\"header\">\n        <Link\n          to={this.dependentHome()}\n          className=\"header\"\n          style={{ color: \"white\" }}\n        >\n          VirtualSal\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport Landing from \"./Landing/Landing.jsx\";\nimport SignIn from \"./Landing/SignIn.jsx\";\nimport SignUp from \"./Landing/SignUp.jsx\";\nimport UploadSchedule from \"./Landing/UploadSchedule.jsx\";\nimport DashboardLanding from \"./Dashboard/DashboardLanding.jsx\";\nimport Navbar from \"./Navbar.jsx\";\nimport Info from \"./Dashboard/Info.jsx\";\nimport \"./../App.css\";\nimport Question from \"./Dashboard/Question.jsx\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nclass VirtualSal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // handleSignIn = (username) => {\n  //   //window.location.assign(\"http://localhost:3000/dashboard\");\n  // };\n\n  render() {\n    return (\n      <Router basename={process.env.REACT_APP_ROUTER_BASE || \"\"}>\n        <div className=\"AppContainer\">\n          <Navbar />\n          <div className=\"AppContentContainer\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Landing />\n              </Route>\n              <Route path=\"/signin\">\n                <SignIn />\n              </Route>\n              <Route path=\"/signup\">\n                <SignUp />\n              </Route>\n              <Route path=\"/uploadSchedule\">\n                <UploadSchedule />\n              </Route>\n              <Route path=\"/dashboard\">\n                <DashboardLanding />\n              </Route>\n              <Route path=\"/info\">\n                <Info />\n              </Route>\n              <Route path=\"/dashboard/questions\">\n                <Question />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default VirtualSal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Frontend/index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport VirtualSal from \"./Frontend/Components/VirtualSal.jsx\";\nReactDOM.render(\n  <React.StrictMode>\n    <VirtualSal />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}